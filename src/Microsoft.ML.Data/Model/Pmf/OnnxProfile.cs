// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: onnx-profile.proto3
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ONNX {

  /// <summary>Holder for reflection information generated from onnx-profile.proto3</summary>
  public static partial class OnnxProfileReflection {

    #region Descriptor
    /// <summary>File descriptor for onnx-profile.proto3</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OnnxProfileReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNvbm54LXByb2ZpbGUucHJvdG8zEgRvbm54Gg5vbm54LW1sLnByb3RvMxoV",
            "b25ueC1vcGVyYXRvcnMucHJvdG8zImcKElBhcmFtZXRlckRlY2xQcm90bxIM",
            "CgRuYW1lGAEgASgJEh0KBHR5cGUYAiABKAsyDy5vbm54LlR5cGVQcm90bxIS",
            "Cgpkb2Nfc3RyaW5nGAMgASgJEhAKCHZhcmlhZGljGAQgASgIIr0BChJTaWdu",
            "YXR1cmVEZWNsUHJvdG8SLgoMaW5wdXRfcGFyYW1zGAEgAygLMhgub25ueC5Q",
            "YXJhbWV0ZXJEZWNsUHJvdG8SLwoNb3V0cHV0X3BhcmFtcxgCIAMoCzIYLm9u",
            "bnguUGFyYW1ldGVyRGVjbFByb3RvEjIKEGlucHV0X2F0dHJpYnV0ZXMYAyAD",
            "KAsyGC5vbm54LlBhcmFtZXRlckRlY2xQcm90bxISCgpkb2Nfc3RyaW5nGAQg",
            "ASgJImkKEU9wZXJhdG9yRGVjbFByb3RvEgwKBG5hbWUYASABKAkSKwoJc2ln",
            "bmF0dXJlGAIgAygLMhgub25ueC5TaWduYXR1cmVEZWNsUHJvdG8SEgoKZG9j",
            "X3N0cmluZxgDIAEoCUoFCGQQyQEivQIKDExpYnJhcnlQcm90bxISCgppcl92",
            "ZXJzaW9uGAEgASgDEhgKEHByb2R1Y2VyX3ZlcnNpb24YAiABKAMSFAoMcHJv",
            "ZHVjZXJfdGFnGAMgASgJEhUKDW1vZGVsX3ZlcnNpb24YBCABKAMSFAoMbW9k",
            "ZWxfYXV0aG9yGAUgASgJEhUKDW1vZGVsX2xpY2Vuc2UYBiABKAkSDAoEbmFt",
            "ZRgHIAEoCRIOCgZkb21haW4YCCABKAkSEgoKZG9jX3N0cmluZxgJIAEoCRIp",
            "CghvcGVyYXRvchgKIAMoCzIXLm9ubnguT3BlcmF0b3JEZWNsUHJvdG8SJQoI",
            "ZnVuY3Rpb24YCyADKAsyEy5vbm54LkZ1bmN0aW9uUHJvdG8SGgoSaW1wb3J0",
            "ZWRfbGlicmFyaWVzGAwgAygJSgUIZBDJAUIHqgIET05OWGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ONNX.OnnxMlReflection.Descriptor, global::ONNX.OnnxOperatorsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ONNX.ParameterDeclProto), global::ONNX.ParameterDeclProto.Parser, new[]{ "Name", "Type", "DocString", "Variadic" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ONNX.SignatureDeclProto), global::ONNX.SignatureDeclProto.Parser, new[]{ "InputParams", "OutputParams", "InputAttributes", "DocString" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ONNX.OperatorDeclProto), global::ONNX.OperatorDeclProto.Parser, new[]{ "Name", "Signature", "DocString" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ONNX.LibraryProto), global::ONNX.LibraryProto.Parser, new[]{ "IrVersion", "ProducerVersion", "ProducerTag", "ModelVersion", "ModelAuthor", "ModelLicense", "Name", "Domain", "DocString", "Operator", "Function", "ImportedLibraries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ParameterDeclProto : pb::IMessage<ParameterDeclProto> {
    private static readonly pb::MessageParser<ParameterDeclProto> _parser = new pb::MessageParser<ParameterDeclProto>(() => new ParameterDeclProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParameterDeclProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ONNX.OnnxProfileReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterDeclProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterDeclProto(ParameterDeclProto other) : this() {
      name_ = other.name_;
      Type = other.type_ != null ? other.Type.Clone() : null;
      docString_ = other.docString_;
      variadic_ = other.variadic_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterDeclProto Clone() {
      return new ParameterDeclProto(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::ONNX.TypeProto type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ONNX.TypeProto Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "doc_string" field.</summary>
    public const int DocStringFieldNumber = 3;
    private string docString_ = "";
    /// <summary>
    /// An human-readable documentation for this parameter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocString {
      get { return docString_; }
      set {
        docString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "variadic" field.</summary>
    public const int VariadicFieldNumber = 4;
    private bool variadic_;
    /// <summary>
    /// Indicates whether this parameter can take a list of values.
    /// Only applicable to input parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Variadic {
      get { return variadic_; }
      set {
        variadic_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParameterDeclProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParameterDeclProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Type, other.Type)) return false;
      if (DocString != other.DocString) return false;
      if (Variadic != other.Variadic) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (DocString.Length != 0) hash ^= DocString.GetHashCode();
      if (Variadic != false) hash ^= Variadic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (DocString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DocString);
      }
      if (Variadic != false) {
        output.WriteRawTag(32);
        output.WriteBool(Variadic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (DocString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocString);
      }
      if (Variadic != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParameterDeclProto other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          type_ = new global::ONNX.TypeProto();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.DocString.Length != 0) {
        DocString = other.DocString;
      }
      if (other.Variadic != false) {
        Variadic = other.Variadic;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (type_ == null) {
              type_ = new global::ONNX.TypeProto();
            }
            input.ReadMessage(type_);
            break;
          }
          case 26: {
            DocString = input.ReadString();
            break;
          }
          case 32: {
            Variadic = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignatureDeclProto : pb::IMessage<SignatureDeclProto> {
    private static readonly pb::MessageParser<SignatureDeclProto> _parser = new pb::MessageParser<SignatureDeclProto>(() => new SignatureDeclProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignatureDeclProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ONNX.OnnxProfileReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureDeclProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureDeclProto(SignatureDeclProto other) : this() {
      inputParams_ = other.inputParams_.Clone();
      outputParams_ = other.outputParams_.Clone();
      inputAttributes_ = other.inputAttributes_.Clone();
      docString_ = other.docString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureDeclProto Clone() {
      return new SignatureDeclProto(this);
    }

    /// <summary>Field number for the "input_params" field.</summary>
    public const int InputParamsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ONNX.ParameterDeclProto> _repeated_inputParams_codec
        = pb::FieldCodec.ForMessage(10, global::ONNX.ParameterDeclProto.Parser);
    private readonly pbc::RepeatedField<global::ONNX.ParameterDeclProto> inputParams_ = new pbc::RepeatedField<global::ONNX.ParameterDeclProto>();
    /// <summary>
    /// The formal input parameters to the operation or function
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ONNX.ParameterDeclProto> InputParams {
      get { return inputParams_; }
    }

    /// <summary>Field number for the "output_params" field.</summary>
    public const int OutputParamsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ONNX.ParameterDeclProto> _repeated_outputParams_codec
        = pb::FieldCodec.ForMessage(18, global::ONNX.ParameterDeclProto.Parser);
    private readonly pbc::RepeatedField<global::ONNX.ParameterDeclProto> outputParams_ = new pbc::RepeatedField<global::ONNX.ParameterDeclProto>();
    /// <summary>
    /// The formal output parameters to the operation or function
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ONNX.ParameterDeclProto> OutputParams {
      get { return outputParams_; }
    }

    /// <summary>Field number for the "input_attributes" field.</summary>
    public const int InputAttributesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ONNX.ParameterDeclProto> _repeated_inputAttributes_codec
        = pb::FieldCodec.ForMessage(26, global::ONNX.ParameterDeclProto.Parser);
    private readonly pbc::RepeatedField<global::ONNX.ParameterDeclProto> inputAttributes_ = new pbc::RepeatedField<global::ONNX.ParameterDeclProto>();
    /// <summary>
    /// The declaration of expected attributes to the operation or function
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ONNX.ParameterDeclProto> InputAttributes {
      get { return inputAttributes_; }
    }

    /// <summary>Field number for the "doc_string" field.</summary>
    public const int DocStringFieldNumber = 4;
    private string docString_ = "";
    /// <summary>
    /// An human-readable documentation for this signature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocString {
      get { return docString_; }
      set {
        docString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignatureDeclProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignatureDeclProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputParams_.Equals(other.inputParams_)) return false;
      if(!outputParams_.Equals(other.outputParams_)) return false;
      if(!inputAttributes_.Equals(other.inputAttributes_)) return false;
      if (DocString != other.DocString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputParams_.GetHashCode();
      hash ^= outputParams_.GetHashCode();
      hash ^= inputAttributes_.GetHashCode();
      if (DocString.Length != 0) hash ^= DocString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputParams_.WriteTo(output, _repeated_inputParams_codec);
      outputParams_.WriteTo(output, _repeated_outputParams_codec);
      inputAttributes_.WriteTo(output, _repeated_inputAttributes_codec);
      if (DocString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DocString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputParams_.CalculateSize(_repeated_inputParams_codec);
      size += outputParams_.CalculateSize(_repeated_outputParams_codec);
      size += inputAttributes_.CalculateSize(_repeated_inputAttributes_codec);
      if (DocString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignatureDeclProto other) {
      if (other == null) {
        return;
      }
      inputParams_.Add(other.inputParams_);
      outputParams_.Add(other.outputParams_);
      inputAttributes_.Add(other.inputAttributes_);
      if (other.DocString.Length != 0) {
        DocString = other.DocString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputParams_.AddEntriesFrom(input, _repeated_inputParams_codec);
            break;
          }
          case 18: {
            outputParams_.AddEntriesFrom(input, _repeated_outputParams_codec);
            break;
          }
          case 26: {
            inputAttributes_.AddEntriesFrom(input, _repeated_inputAttributes_codec);
            break;
          }
          case 34: {
            DocString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperatorDeclProto : pb::IMessage<OperatorDeclProto> {
    private static readonly pb::MessageParser<OperatorDeclProto> _parser = new pb::MessageParser<OperatorDeclProto>(() => new OperatorDeclProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperatorDeclProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ONNX.OnnxProfileReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperatorDeclProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperatorDeclProto(OperatorDeclProto other) : this() {
      name_ = other.name_;
      signature_ = other.signature_.Clone();
      docString_ = other.docString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperatorDeclProto Clone() {
      return new OperatorDeclProto(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// This field MUST be present for this version of the IR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ONNX.SignatureDeclProto> _repeated_signature_codec
        = pb::FieldCodec.ForMessage(18, global::ONNX.SignatureDeclProto.Parser);
    private readonly pbc::RepeatedField<global::ONNX.SignatureDeclProto> signature_ = new pbc::RepeatedField<global::ONNX.SignatureDeclProto>();
    /// <summary>
    /// This field MUST contain at least one SignatureDeclProto.
    /// This field MAY contain multiple SignatureDeclProtos, one
    /// per type signature supported by this operator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ONNX.SignatureDeclProto> Signature {
      get { return signature_; }
    }

    /// <summary>Field number for the "doc_string" field.</summary>
    public const int DocStringFieldNumber = 3;
    private string docString_ = "";
    /// <summary>
    /// An human-readable documentation for this operator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocString {
      get { return docString_; }
      set {
        docString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperatorDeclProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperatorDeclProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!signature_.Equals(other.signature_)) return false;
      if (DocString != other.DocString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= signature_.GetHashCode();
      if (DocString.Length != 0) hash ^= DocString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      signature_.WriteTo(output, _repeated_signature_codec);
      if (DocString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DocString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += signature_.CalculateSize(_repeated_signature_codec);
      if (DocString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperatorDeclProto other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      signature_.Add(other.signature_);
      if (other.DocString.Length != 0) {
        DocString = other.DocString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            signature_.AddEntriesFrom(input, _repeated_signature_codec);
            break;
          }
          case 26: {
            DocString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A library is a top-level format that contains the declaration
  /// of operators and the definition of functions.
  /// </summary>
  public sealed partial class LibraryProto : pb::IMessage<LibraryProto> {
    private static readonly pb::MessageParser<LibraryProto> _parser = new pb::MessageParser<LibraryProto>(() => new LibraryProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LibraryProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ONNX.OnnxProfileReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryProto(LibraryProto other) : this() {
      irVersion_ = other.irVersion_;
      producerVersion_ = other.producerVersion_;
      producerTag_ = other.producerTag_;
      modelVersion_ = other.modelVersion_;
      modelAuthor_ = other.modelAuthor_;
      modelLicense_ = other.modelLicense_;
      name_ = other.name_;
      domain_ = other.domain_;
      docString_ = other.docString_;
      operator_ = other.operator_.Clone();
      function_ = other.function_.Clone();
      importedLibraries_ = other.importedLibraries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LibraryProto Clone() {
      return new LibraryProto(this);
    }

    /// <summary>Field number for the "ir_version" field.</summary>
    public const int IrVersionFieldNumber = 1;
    private long irVersion_;
    /// <summary>
    /// The version of the IR this graph targets. See Version enum below.
    /// This field MUST be present this version of the IR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IrVersion {
      get { return irVersion_; }
      set {
        irVersion_ = value;
      }
    }

    /// <summary>Field number for the "producer_version" field.</summary>
    public const int ProducerVersionFieldNumber = 2;
    private long producerVersion_;
    /// <summary>
    /// The version of the framework runtime that generates this graph.
    /// This producer_version has the same format as ir_version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProducerVersion {
      get { return producerVersion_; }
      set {
        producerVersion_ = value;
      }
    }

    /// <summary>Field number for the "producer_tag" field.</summary>
    public const int ProducerTagFieldNumber = 3;
    private string producerTag_ = "";
    /// <summary>
    /// The name of the framework used to generate this graph in the form
    /// "framework_name[-tag]". Tag is and provides additional
    /// information such as `alpha` or `beta` or `rc3`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProducerTag {
      get { return producerTag_; }
      set {
        producerTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_version" field.</summary>
    public const int ModelVersionFieldNumber = 4;
    private long modelVersion_;
    /// <summary>
    /// An version identifier used to track evolution of this library.
    /// This model_version has the same format as ir_version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ModelVersion {
      get { return modelVersion_; }
      set {
        modelVersion_ = value;
      }
    }

    /// <summary>Field number for the "model_author" field.</summary>
    public const int ModelAuthorFieldNumber = 5;
    private string modelAuthor_ = "";
    /// <summary>
    /// The name of the author who created the library.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelAuthor {
      get { return modelAuthor_; }
      set {
        modelAuthor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_license" field.</summary>
    public const int ModelLicenseFieldNumber = 6;
    private string modelLicense_ = "";
    /// <summary>
    /// licensing information concerning use or origination of the library.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelLicense {
      get { return modelLicense_; }
      set {
        modelLicense_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name of the library.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 8;
    private string domain_ = "";
    /// <summary>
    /// Domain of the graph.
    /// We use reverse domain names as name space indicators. For example:
    /// `com.facebook.fair` or `com.microsoft.cognitiveservices`
    ///
    /// Together with `name` and `model_version`, this forms the unique identity of
    /// the library.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "doc_string" field.</summary>
    public const int DocStringFieldNumber = 9;
    private string docString_ = "";
    /// <summary>
    /// An human-readable documentation for this graph.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocString {
      get { return docString_; }
      set {
        docString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operator" field.</summary>
    public const int OperatorFieldNumber = 10;
    private static readonly pb::FieldCodec<global::ONNX.OperatorDeclProto> _repeated_operator_codec
        = pb::FieldCodec.ForMessage(82, global::ONNX.OperatorDeclProto.Parser);
    private readonly pbc::RepeatedField<global::ONNX.OperatorDeclProto> operator_ = new pbc::RepeatedField<global::ONNX.OperatorDeclProto>();
    /// <summary>
    /// The operators declared by this library.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ONNX.OperatorDeclProto> Operator {
      get { return operator_; }
    }

    /// <summary>Field number for the "function" field.</summary>
    public const int FunctionFieldNumber = 11;
    private static readonly pb::FieldCodec<global::ONNX.FunctionProto> _repeated_function_codec
        = pb::FieldCodec.ForMessage(90, global::ONNX.FunctionProto.Parser);
    private readonly pbc::RepeatedField<global::ONNX.FunctionProto> function_ = new pbc::RepeatedField<global::ONNX.FunctionProto>();
    /// <summary>
    /// The function definitions of the library.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ONNX.FunctionProto> Function {
      get { return function_; }
    }

    /// <summary>Field number for the "imported_libraries" field.</summary>
    public const int ImportedLibrariesFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _repeated_importedLibraries_codec
        = pb::FieldCodec.ForString(98);
    private readonly pbc::RepeatedField<string> importedLibraries_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Imported libraries are referenced as a collection of strings in the form of absolute
    /// URIs or relative paths. Where such relative paths are rooted is defined by tools and
    /// runtime implementations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ImportedLibraries {
      get { return importedLibraries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LibraryProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LibraryProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IrVersion != other.IrVersion) return false;
      if (ProducerVersion != other.ProducerVersion) return false;
      if (ProducerTag != other.ProducerTag) return false;
      if (ModelVersion != other.ModelVersion) return false;
      if (ModelAuthor != other.ModelAuthor) return false;
      if (ModelLicense != other.ModelLicense) return false;
      if (Name != other.Name) return false;
      if (Domain != other.Domain) return false;
      if (DocString != other.DocString) return false;
      if(!operator_.Equals(other.operator_)) return false;
      if(!function_.Equals(other.function_)) return false;
      if(!importedLibraries_.Equals(other.importedLibraries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IrVersion != 0L) hash ^= IrVersion.GetHashCode();
      if (ProducerVersion != 0L) hash ^= ProducerVersion.GetHashCode();
      if (ProducerTag.Length != 0) hash ^= ProducerTag.GetHashCode();
      if (ModelVersion != 0L) hash ^= ModelVersion.GetHashCode();
      if (ModelAuthor.Length != 0) hash ^= ModelAuthor.GetHashCode();
      if (ModelLicense.Length != 0) hash ^= ModelLicense.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (DocString.Length != 0) hash ^= DocString.GetHashCode();
      hash ^= operator_.GetHashCode();
      hash ^= function_.GetHashCode();
      hash ^= importedLibraries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IrVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(IrVersion);
      }
      if (ProducerVersion != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ProducerVersion);
      }
      if (ProducerTag.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProducerTag);
      }
      if (ModelVersion != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ModelVersion);
      }
      if (ModelAuthor.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModelAuthor);
      }
      if (ModelLicense.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModelLicense);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Domain);
      }
      if (DocString.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(DocString);
      }
      operator_.WriteTo(output, _repeated_operator_codec);
      function_.WriteTo(output, _repeated_function_codec);
      importedLibraries_.WriteTo(output, _repeated_importedLibraries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IrVersion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IrVersion);
      }
      if (ProducerVersion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProducerVersion);
      }
      if (ProducerTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProducerTag);
      }
      if (ModelVersion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ModelVersion);
      }
      if (ModelAuthor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelAuthor);
      }
      if (ModelLicense.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelLicense);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (DocString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocString);
      }
      size += operator_.CalculateSize(_repeated_operator_codec);
      size += function_.CalculateSize(_repeated_function_codec);
      size += importedLibraries_.CalculateSize(_repeated_importedLibraries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LibraryProto other) {
      if (other == null) {
        return;
      }
      if (other.IrVersion != 0L) {
        IrVersion = other.IrVersion;
      }
      if (other.ProducerVersion != 0L) {
        ProducerVersion = other.ProducerVersion;
      }
      if (other.ProducerTag.Length != 0) {
        ProducerTag = other.ProducerTag;
      }
      if (other.ModelVersion != 0L) {
        ModelVersion = other.ModelVersion;
      }
      if (other.ModelAuthor.Length != 0) {
        ModelAuthor = other.ModelAuthor;
      }
      if (other.ModelLicense.Length != 0) {
        ModelLicense = other.ModelLicense;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.DocString.Length != 0) {
        DocString = other.DocString;
      }
      operator_.Add(other.operator_);
      function_.Add(other.function_);
      importedLibraries_.Add(other.importedLibraries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IrVersion = input.ReadInt64();
            break;
          }
          case 16: {
            ProducerVersion = input.ReadInt64();
            break;
          }
          case 26: {
            ProducerTag = input.ReadString();
            break;
          }
          case 32: {
            ModelVersion = input.ReadInt64();
            break;
          }
          case 42: {
            ModelAuthor = input.ReadString();
            break;
          }
          case 50: {
            ModelLicense = input.ReadString();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 66: {
            Domain = input.ReadString();
            break;
          }
          case 74: {
            DocString = input.ReadString();
            break;
          }
          case 82: {
            operator_.AddEntriesFrom(input, _repeated_operator_codec);
            break;
          }
          case 90: {
            function_.AddEntriesFrom(input, _repeated_function_codec);
            break;
          }
          case 98: {
            importedLibraries_.AddEntriesFrom(input, _repeated_importedLibraries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
